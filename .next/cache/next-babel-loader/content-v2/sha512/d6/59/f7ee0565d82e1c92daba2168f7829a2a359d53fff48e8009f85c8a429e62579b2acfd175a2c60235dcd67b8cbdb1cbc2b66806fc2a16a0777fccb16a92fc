{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\stefa\\\\Documents\\\\gitlab\\\\WBS\\\\ServerSide\\\\CodePen_Next\\\\my-code-pen\\\\pages\\\\index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport SplitPane from \"react-split-pane\";\nimport { CssEditor, HtmlEditor, JavascriptEditor } from \"../components/editors\";\nimport { useDebounce } from \"../utils/useDebounce\";\nimport styles from \"./index.module.css\";\n\nconst Index = () => {\n  const {\n    0: heightValue,\n    1: setHeightValue\n  } = useState(\"485px\");\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: saving,\n    1: setSaving\n  } = useState(false);\n  const {\n    0: htmlValue,\n    1: setHtmlValue\n  } = useState(\"\");\n  const {\n    0: jsValue,\n    1: setJsValue\n  } = useState(\"\");\n  const {\n    0: cssValue,\n    1: setCssValue\n  } = useState(\"\");\n  const {\n    0: outputValue,\n    1: setOutputValue\n  } = useState(\"\");\n  const debouncedHtml = useDebounce(htmlValue, 1000);\n  const debouncedJs = useDebounce(jsValue, 1000);\n  const debouncedCss = useDebounce(cssValue, 1000);\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch(`../api/pens/${id}`);\n      const {\n        data\n      } = await response.json();\n\n      if (response.status !== 200) {\n        await router.push(\"/404\");\n      }\n\n      setHtmlValue(data.html);\n      setCssValue(data.css);\n      setJsValue(data.js);\n      setLoading(false);\n    }\n\n    if (id) {\n      setLoading(true);\n      fetchData();\n    } else {\n      setLoading(false);\n    }\n  }, [id]);\n  useEffect(() => {\n    const output = `<html>\n                    <style>\n                    ${debouncedCss}\n                    </style>\n                    <body>\n                    ${debouncedHtml}\n                    <script type=\"text/javascript\">\n                    ${debouncedJs}\n                    </script>\n                    </body>\n                  </html>`;\n    setOutputValue(output);\n  }, [debouncedHtml, debouncedCss, debouncedJs]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.loading,\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this);\n  }\n\n  const save = async () => {\n    setSaving(true);\n    const requestOptions = {\n      method: !id ? \"PUT\" : \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        html: htmlValue,\n        css: cssValue,\n        js: jsValue,\n        id: id\n      })\n    };\n    const response = await fetch(`../api/pens/${id}`, requestOptions);\n    const {\n      data: {\n        updatedRecord,\n        newRecordId\n      }\n    } = await response.json();\n    setSaving(false);\n\n    if (!updatedRecord) {\n      await router.push(`?id=${newRecordId}`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.button,\n        onClick: () => location.href = \"/\",\n        children: \"New\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.button,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(SplitPane, {\n      style: {\n        marginTop: \"60px\"\n      },\n      split: \"horizontal\",\n      minSize: \"50%\",\n      onDragFinished: height => {\n        setHeightValue(`${height - 40}px`);\n      },\n      children: [/*#__PURE__*/_jsxDEV(SplitPane, {\n        split: \"vertical\",\n        minSize: \"33%\",\n        children: [/*#__PURE__*/_jsxDEV(HtmlEditor, {\n          height: heightValue,\n          value: htmlValue,\n          onChange: setHtmlValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(SplitPane, {\n          split: \"vertical\",\n          minSize: \"50%\",\n          children: [/*#__PURE__*/_jsxDEV(CssEditor, {\n            height: heightValue,\n            value: cssValue,\n            onChange: setCssValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(JavascriptEditor, {\n            height: heightValue,\n            value: jsValue,\n            onChange: setJsValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n        srcDoc: outputValue,\n        className: styles.previewIframe\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/stefa/Documents/gitlab/WBS/ServerSide/CodePen_Next/my-code-pen/pages/index.js"],"names":["React","useState","useEffect","useRouter","SplitPane","CssEditor","HtmlEditor","JavascriptEditor","useDebounce","styles","Index","heightValue","setHeightValue","loading","setLoading","saving","setSaving","htmlValue","setHtmlValue","jsValue","setJsValue","cssValue","setCssValue","outputValue","setOutputValue","debouncedHtml","debouncedJs","debouncedCss","router","id","query","fetchData","response","fetch","data","json","status","push","html","css","js","output","save","requestOptions","method","headers","body","JSON","stringify","updatedRecord","newRecordId","header","button","location","href","marginTop","height","previewIframe"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport SplitPane from \"react-split-pane\";\n\nimport { CssEditor, HtmlEditor, JavascriptEditor } from \"../components/editors\";\nimport { useDebounce } from \"../utils/useDebounce\";\n\nimport styles from \"./index.module.css\";\n\nconst Index = () => {\n  const [heightValue, setHeightValue] = useState(\"485px\");\n\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState(false);\n\n  const [htmlValue, setHtmlValue] = useState(\"\");\n  const [jsValue, setJsValue] = useState(\"\");\n  const [cssValue, setCssValue] = useState(\"\");\n  const [outputValue, setOutputValue] = useState(\"\");\n\n  const debouncedHtml = useDebounce(htmlValue, 1000);\n  const debouncedJs = useDebounce(jsValue, 1000);\n  const debouncedCss = useDebounce(cssValue, 1000);\n\n  const router = useRouter();\n  const { id } = router.query;\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch(`../api/pens/${id}`);\n      const { data } = await response.json();\n\n      if (response.status !== 200) {\n        await router.push(\"/404\");\n      }\n\n      setHtmlValue(data.html);\n      setCssValue(data.css);\n      setJsValue(data.js);\n\n      setLoading(false);\n    }\n\n    if (id) {\n      setLoading(true);\n      fetchData();\n    } else {\n      setLoading(false);\n    }\n  }, [id]);\n\n\n  useEffect(() => {\n    const output = `<html>\n                    <style>\n                    ${debouncedCss}\n                    </style>\n                    <body>\n                    ${debouncedHtml}\n                    <script type=\"text/javascript\">\n                    ${debouncedJs}\n                    </script>\n                    </body>\n                  </html>`;\n    setOutputValue(output);\n  }, [debouncedHtml, debouncedCss, debouncedJs]);\n\n\n\n\n  if (loading) {\n    return <div className={styles.loading}>Loading...</div>;\n  }\n\n\n\n    const save = async () => {\n      setSaving(true);\n      const requestOptions = {\n        method: !id ? \"PUT\" : \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          html: htmlValue,\n          css: cssValue,\n          js: jsValue,\n          id: id,\n        }),\n    };\n    const response = await fetch(`../api/pens/${id}`, requestOptions);\n    const {\n      data: { updatedRecord, newRecordId },\n    } = await response.json();\n\n    setSaving(false);\n    if (!updatedRecord) {\n      await router.push(`?id=${newRecordId}`);\n    }\n  };\n\n\n\n\n  return (\n    <>\n    <div className={styles.header}>\n      <button\n          className={styles.button}\n          onClick={() => (location.href = \"/\")}\n      >\n        New\n      </button>\n      <button className={styles.button}>\n        Save\n      </button>\n    </div>\n    <SplitPane\n      style={{ marginTop: \"60px\" }}\n      split=\"horizontal\"\n      minSize={\"50%\"}\n      onDragFinished={(height) => {\n        setHeightValue(`${height - 40}px`);\n      }}\n    >\n      <SplitPane split=\"vertical\" minSize={\"33%\"}>\n        <HtmlEditor\n          height={heightValue}\n          value={htmlValue}\n          onChange={setHtmlValue}\n        />\n        <SplitPane split=\"vertical\" minSize={\"50%\"}>\n          <CssEditor\n            height={heightValue}\n            value={cssValue}\n            onChange={setCssValue}\n          />\n          <JavascriptEditor\n            height={heightValue}\n            value={jsValue}\n            onChange={setJsValue}\n          />\n        </SplitPane>\n      </SplitPane>\n      <iframe srcDoc={outputValue} className={styles.previewIframe} />\n    </SplitPane>\n    </>\n  );\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}