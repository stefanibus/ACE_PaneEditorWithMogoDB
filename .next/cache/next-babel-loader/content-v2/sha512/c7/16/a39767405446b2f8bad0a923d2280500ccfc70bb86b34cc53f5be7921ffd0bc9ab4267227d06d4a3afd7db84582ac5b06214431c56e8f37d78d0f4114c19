{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\stefa\\\\Documents\\\\gitlab\\\\WBS\\\\ServerSide\\\\CodePen_Next\\\\my-code-pen\\\\pages\\\\index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport SplitPane from \"react-split-pane\";\nimport { CssEditor, HtmlEditor, JavascriptEditor } from \"../components/editors\";\nimport { useDebounce } from \"../utils/useDebounce\";\nimport styles from \"./index.module.css\";\n\nconst Index = () => {\n  const {\n    0: heightValue,\n    1: setHeightValue\n  } = useState(\"485px\");\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: htmlValue,\n    1: setHtmlValue\n  } = useState(\"\");\n  const {\n    0: jsValue,\n    1: setJsValue\n  } = useState(\"\");\n  const {\n    0: cssValue,\n    1: setCssValue\n  } = useState(\"\");\n  const {\n    0: outputValue,\n    1: setOutputValue\n  } = useState(\"\");\n  const debouncedHtml = useDebounce(htmlValue, 1000);\n  const debouncedJs = useDebounce(jsValue, 1000);\n  const debouncedCss = useDebounce(cssValue, 1000);\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch(`../api/pens/${id}`);\n      const {\n        data\n      } = await response.json();\n\n      if (response.status !== 200) {\n        await router.push(\"/404\");\n      }\n\n      setHtmlValue(data.html);\n      setCssValue(data.css);\n      setJsValue(data.js);\n      setLoading(false);\n    }\n\n    if (id) {\n      setLoading(true);\n      fetchData();\n    } else {\n      setLoading(false);\n    }\n  }, [id]);\n  useEffect(() => {\n    const output = `<html>\n                    <style>\n                    ${debouncedCss}\n                    </style>\n                    <body>\n                    ${debouncedHtml}\n                    <script type=\"text/javascript\">\n                    ${debouncedJs}\n                    </script>\n                    </body>\n                  </html>`;\n\n    (async () => {\n      console.time(\"Slept for\");\n      var sleep = 1;\n      await sleep(3000);\n      console.timeEnd(\"Slept for\");\n    })();\n\n    setOutputValue(output);\n  }, [debouncedHtml, debouncedCss, debouncedJs]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.loading,\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(SplitPane, {\n    split: \"horizontal\",\n    minSize: \"50%\",\n    onDragFinished: height => {\n      setHeightValue(`${height - 40}px`);\n    },\n    children: [/*#__PURE__*/_jsxDEV(SplitPane, {\n      split: \"vertical\",\n      minSize: \"33%\",\n      children: [/*#__PURE__*/_jsxDEV(HtmlEditor, {\n        height: heightValue,\n        value: htmlValue,\n        onChange: setHtmlValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SplitPane, {\n        split: \"vertical\",\n        minSize: \"50%\",\n        children: [/*#__PURE__*/_jsxDEV(CssEditor, {\n          height: heightValue,\n          value: cssValue,\n          onChange: setCssValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(JavascriptEditor, {\n          height: heightValue,\n          value: jsValue,\n          onChange: setJsValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n      srcDoc: outputValue,\n      className: styles.previewIframe\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/stefa/Documents/gitlab/WBS/ServerSide/CodePen_Next/my-code-pen/pages/index.js"],"names":["React","useState","useEffect","useRouter","SplitPane","CssEditor","HtmlEditor","JavascriptEditor","useDebounce","styles","Index","heightValue","setHeightValue","loading","setLoading","htmlValue","setHtmlValue","jsValue","setJsValue","cssValue","setCssValue","outputValue","setOutputValue","debouncedHtml","debouncedJs","debouncedCss","router","id","query","fetchData","response","fetch","data","json","status","push","html","css","js","output","console","time","sleep","timeEnd","height","previewIframe"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport SplitPane from \"react-split-pane\";\n\nimport { CssEditor, HtmlEditor, JavascriptEditor } from \"../components/editors\";\nimport { useDebounce } from \"../utils/useDebounce\";\n\nimport styles from \"./index.module.css\";\n\nconst Index = () => {\n  const [heightValue, setHeightValue] = useState(\"485px\");\n\n  const [loading, setLoading] = useState(true);\n\n  const [htmlValue, setHtmlValue] = useState(\"\");\n  const [jsValue, setJsValue] = useState(\"\");\n  const [cssValue, setCssValue] = useState(\"\");\n  const [outputValue, setOutputValue] = useState(\"\");\n\n  const debouncedHtml = useDebounce(htmlValue, 1000);\n  const debouncedJs = useDebounce(jsValue, 1000);\n  const debouncedCss = useDebounce(cssValue, 1000);\n\n  const router = useRouter();\n  const { id } = router.query;\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch(`../api/pens/${id}`);\n      const { data } = await response.json();\n\n      if (response.status !== 200) {\n        await router.push(\"/404\");\n      }\n\n      setHtmlValue(data.html);\n      setCssValue(data.css);\n      setJsValue(data.js);\n\n      setLoading(false);\n    }\n\n    if (id) {\n      setLoading(true);\n      fetchData();\n    } else {\n      setLoading(false);\n    }\n  }, [id]);\n\n\n\n  useEffect(() => {\n    const output = `<html>\n                    <style>\n                    ${debouncedCss}\n                    </style>\n                    <body>\n                    ${debouncedHtml}\n                    <script type=\"text/javascript\">\n                    ${debouncedJs}\n                    </script>\n                    </body>\n                  </html>`;\n\n(async () => {\n    console.time(\"Slept for\")\n    var sleep =  1;\n    await sleep(3000)\n    console.timeEnd(\"Slept for\")\n})()\n  setOutputValue(output)\n\n\n\n\n\n  }, [debouncedHtml, debouncedCss, debouncedJs]);\n\n  if (loading) {\n    return <div className={styles.loading}>Loading...</div>;\n  }\n\n  return (\n    <SplitPane\n      split=\"horizontal\"\n      minSize={\"50%\"}\n      onDragFinished={(height) => {\n        setHeightValue(`${height - 40}px`);\n      }}\n    >\n      <SplitPane split=\"vertical\" minSize={\"33%\"}>\n        <HtmlEditor\n          height={heightValue}\n          value={htmlValue}\n          onChange={setHtmlValue}\n        />\n        <SplitPane split=\"vertical\" minSize={\"50%\"}>\n          <CssEditor\n            height={heightValue}\n            value={cssValue}\n            onChange={setCssValue}\n          />\n          <JavascriptEditor\n            height={heightValue}\n            value={jsValue}\n            onChange={setJsValue}\n          />\n        </SplitPane>\n      </SplitPane>\n      <iframe srcDoc={outputValue} className={styles.previewIframe} />\n    </SplitPane>\n  );\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}