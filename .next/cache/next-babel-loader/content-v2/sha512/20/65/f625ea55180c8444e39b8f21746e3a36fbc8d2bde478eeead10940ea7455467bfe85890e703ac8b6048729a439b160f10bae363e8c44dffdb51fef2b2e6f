{"ast":null,"code":"import { connect, ObjectId } from \"../../../utils/database\";\nexport default (async (req, res) => {\n  const {\n    query: {\n      id\n    },\n    method\n  } = req;\n  const collectionName = \"pensName\";\n\n  switch (method) {\n    case \"GET\":\n      try {\n        const {\n          db\n        } = await connect();\n        const data = await db.collection(collectionName).find({\n          userID: id\n        }).toArray();\n        res.status(200).json({\n          data\n        });\n      } catch (error) {\n        res.status(500).json({\n          success: false\n        });\n      }\n\n      break;\n  }\n});","map":{"version":3,"sources":["C:/Users/stefa/Documents/gitlab/WBS/ServerSide/CodePen_Next/my-code-pen/pages/api/users/[id].js"],"names":["connect","ObjectId","req","res","query","id","method","collectionName","db","data","collection","find","userID","toArray","status","json","error","success"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,QAAlB,QAAkC,yBAAlC;AAEA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC/B,QAAM;AACFC,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF,KADL;AAEFC,IAAAA;AAFE,MAGFJ,GAHJ;AAIA,QAAMK,cAAc,GAAG,UAAvB;;AACA,UAAQD,MAAR;AACI,SAAK,KAAL;AACI,UAAI;AACA,cAAM;AAAEE,UAAAA;AAAF,YAAS,MAAMR,OAAO,EAA5B;AACA,cAAMS,IAAI,GAAG,MAAMD,EAAE,CAACE,UAAH,CAAcH,cAAd,EAA8BI,IAA9B,CAAmC;AAAEC,UAAAA,MAAM,EAAEP;AAAV,SAAnC,EAAmDQ,OAAnD,EAAnB;AACAV,QAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEN,UAAAA;AAAF,SAArB;AACH,OAJD,CAIE,OAAOO,KAAP,EAAc;AACZb,QAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEE,UAAAA,OAAO,EAAE;AAAX,SAArB;AACH;;AACD;AATR;AAWH,CAjBD","sourcesContent":["import { connect, ObjectId } from \"../../../utils/database\";\r\n\r\nexport default async (req, res) => {\r\n    const {\r\n        query: { id },\r\n        method,\r\n    } = req;\r\n    const collectionName = \"pensName\";\r\n    switch (method) {\r\n        case \"GET\":\r\n            try {\r\n                const { db } = await connect();\r\n                const data = await db.collection(collectionName).find({ userID: id }).toArray();\r\n                res.status(200).json({ data });\r\n            } catch (error) {\r\n                res.status(500).json({ success: false });\r\n            }\r\n            break;\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}